apiVersion: v1
kind: Secret
metadata:
  name: {{ include "paperless.fullname" . }}-app
data:
  {{- if and .Values.redis.enabled (not .Values.externalRedis.url) }}
  PAPERLESS_REDIS: {{ (printf "redis://%s-redis:%d" (include "paperless.fullname" .) (int .Values.redis.port)) | b64enc}}
  {{- end }}
  {{- if .Values.db.type }}
  {{- if not .Values.db.external.host.existingSecret }}
  PAPERLESS_DBHOST: {{ .Values.db.external.host.name | b64enc  }}
  {{- end }}
  {{- if not .Values.db.external.port.existingSecret }}
  PAPERLESS_DBPORT: {{ toString .Values.db.external.port.value | b64enc  }}
  {{- end }}
  {{- if not .Values.db.external.database.existingSecret }}
  PAPERLESS_DBNAME: {{ .Values.db.external.database.name | b64enc  }}
  {{- end }}
  {{- if not .Values.db.external.user.existingSecret }}
  PAPERLESS_DBUSER: {{ .Values.db.external.user.name | b64enc  }}
  {{- end }}
  {{- if not .Values.db.external.password.existingSecret }}
  PAPERLESS_DBPASS: {{ .Values.db.external.password.value | b64enc  }}
  {{- end }}
  {{- if .Values.db.external.sslMode }}
  PAPERLESS_DBSSLMODE: {{ .Values.db.external.sslMode | b64enc  }}
  {{- end }}
  {{- if or .Values.db.external.sslRootCert.certificate .Values.db.external.sslRootCert.existingSecret }}
  PAPERLESS_DBSSLROOTCERT: {{ printf "/etc/ssl/paperless-root-cert/cert" | b64enc }}
  {{- end }}
  {{- if and (not .Values.db.external.sslRootCert.existingSecret) .Values.db.external.sslRootCert.certificate }}
  _root-cert: {{ .Values.db.external.sslRootCert.certificate | b64enc  }}
  {{- end }}
  {{- if or .Values.db.external.sslClientCert.certificate .Values.db.external.sslClientCert.existingSecret }}
  PAPERLESS_DBSSLCERT: {{ printf "/etc/ssl/paperless-client-cert/cert" | b64enc }}
  {{- end }}
  {{- if and (not .Values.db.external.sslClientCert.existingSecret) .Values.db.external.sslClientCert.certificate }}
  _client-cert: {{ .Values.db.external.sslClientCert.certificate | b64enc  }}
  {{- end }}
  {{- if or .Values.db.external.sslClientKey.key .Values.db.external.sslClientKey.existingSecret }}
  PAPERLESS_DBSSLKEY: {{ printf "/etc/ssl/paperless-client-key/key" | b64enc }}
  {{- end }}
  {{- if and (not .Values.db.external.sslClientKey.existingSecret) .Values.db.external.sslClientKey.key }}
  _client-key: {{ .Values.db.external.sslClientKey.key | b64enc  }}
  {{- end }}
  {{- end }}
